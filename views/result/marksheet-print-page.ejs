<html lang="en">

<head>
  <title>Result marksheet</title>
  <%- include("../component/metadata.html") %>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.js"> </script>
</head>

<style>
  .row a {
    text-decoration: none;
  }
  thead th,
  tbody td {
    border: 1px solid black !important;
  }


  .breakBefore { page-break-before: always; } 
  .breakAfter { page-break-after: always; }

</style>

<body onload="pageLoadingTop()">

  <%- include("../component/user-header-nav.html") %>
    <%- include("../component/offcanvas-nav.html") %>
<hr>
    <center class="mt-5">
        <button id="downloadbtn" class="btn view-link ps-3 pe-3 mb-3 fw-semibold text-primary" onclick="htmlPrintPDF('<%=class_name%>', '<%=section_name%>')">Download Marksheet</button>
    </center>
</div>
</div>


<div id="rootApp">


</div>

<div id="demoId">
  <% students.forEach((item, index) => { %>
    <input type="hidden" name="suuid" class="getSuuid_<%=index%>" value="<%=item.suuid%>"> <br>
<% }) %>

    
</div>

<%- include("../component/___node.html") %>

<script>

function marksheetHtml(result, subject, index) {
    let markSheetHtml = `
        <div class="markSheetHtml breakAfter row">
            <div class="col-md-6 m-auto col-11">
                <div class="students-card findcard shadowx">
                    <div class="d-flex justify-content-start align-content-center align-items-center">
                        <img class="rounded-circle border border-1 p-1" height="60px" width="60px" src="/image/student/resized/${result[0].avatar}" alt="">
                        <p class="fw-semibold text-muted ps-1">
                            ${result[0].name}
                            <code class="fw-semibold ps-2 text-truncate">
                                [${result[0].class} - ${result[0].section} - ${result[0].roll}]
                            </code>
                        </p>
                    </div>
                </div>
            </div>
            <div class="table-responsive mb-5">
                <code class="fw-semibold fs-5 ms-5">Rank <code class="rankNumber">${index}</code></code>
                <table class="table table-striped table-bordered p-2 m-2 fw-semibold">
                    <thead>
                        <tr>
                            <th scope="col">Subject</th>
                            <th scope="col">CI Mark</th>
                            <th scope="col">Fi Mark</th>
                            <th scope="col">Book Mark</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${subject.map(subItem => {
                            const resultItem = result.find(item => item.subject_code === subItem.subject_code);
                            return `
                                <tr>
                                    <td class="p-2" scope="row">${subItem.subject_name}</td>
                                    ${resultItem ? `
                                        <td class="p-2 text-center" scope="row">${resultItem.ci_mark}</td>
                                        <td class="p-2 text-center" scope="row">${resultItem.fi_mark}</td>
                                        <td class="p-2 text-center" scope="row">${resultItem.book_mark}</td>
                                    ` : `
                                        <td class="p-2 text-center" scope="row">-</td>
                                        <td class="p-2 text-center" scope="row">-</td>
                                        <td class="p-2 text-center" scope="row">-</td>
                                    `}
                                </tr>`;
                        }).join('')}
                    </tbody>
                    <tfoot>
                        <tr>
                            <td></td>
                            <td></td>
                            <td style="text-align: end;">Total = </td>
                            <td class="p-2" style="font-weight: bold;" scope="row">${result[0].output_mark}</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>`;

    $("#rootApp").append(markSheetHtml);
}


function markSheetPull() {
    const class_name = "<%= class_name %>";
    const section_name = "<%= section_name %>";
    const students = $('input[name="suuid"]').serializeArray();
    const studentLength= students.length;
    _spin_pull();
    _spin_bar_pull()
 $("#downloadbtn").addClass('disabled');

     students.forEach((item, index) => {
      const suuid=item.value;
      $.ajax({
      method: 'POST',
      url: '/admin/result/marksheet-pull-print',
      data: { class_name, section_name, suuid },
      success: (res) => {
        if (res.status == 200) {
          marksheetHtml(res.result, res.subject, index+1)
        
        }

        if(studentLength==index+1){
      _spin_pop()
      _spin_bar_pop()
          $("#downloadbtn").removeClass('disabled');
        return
          
        }
      },

      error: (err) => {
        console.error("AJAX error: ", err);
      }
    });
    });

  }
  
markSheetPull();



function htmlPrintPDF(class_name, section_name){
    const element = document.getElementById('rootApp');
    const stIdentifier = `Marksheet@${class_name}-${section_name}`;
    _spin_pull();
    _spin_bar_pull()
    const options = {
        image: { type: 'jpeg', quality: 1 },
        margin: [0, 0, 0, 0],
        filename: `Marksheet@${stIdentifier}.pdf`,
        image: { type: 'jpeg', quality: 0.90 },
        html2canvas: { scale: 2, useCORS: true },
         jsPDF: { unit: 'pt', format: 'letter', orientation: 'portrait' }, 
        pagebreak: { 
            mode: ['css', 'legacy'], 
            // before: ['.breakBefore'], 
            after: ['.breakAfter'],
        },
        compressPDF: true,
    };
    
    html2pdf().set(options).from(element).save();
     _spin_pop()
      _spin_bar_pop()
}

</script>


</body>

</html>